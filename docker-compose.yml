services:
  db:
    image: postgres:16.3-alpine3.20
    volumes:
      - ${PG_DATA_DIR}:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
    networks:
      - tincan-backend

  backend:
    build: ./backend/
    image: tincan/backend:latest
    command: /rails/bin/docker-entrypoint ./bin/rails server
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_HOST=db
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    networks:
      - tincan-backend
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend/
      args:
        - NEXT_PUBLIC_API_BASE_URL=${API_BASE_URL}
    image: tincan/frontend:latest
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${API_BASE_URL}
    networks:
      - tincan-backend

  nginx:
    image: nginx:1.27.1
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - tincan-backend

networks:
  tincan-backend:
    driver: bridge